{"ast":null,"code":"import { SET_LOGGEDIN_USER, LOGOUT, SET_ALL_USERS, GET_ALL_QUESTIONS, QUESTIONS_TO_DISPLAY, ON_HOME, GET_ANSWERED, GET_UNANSWERED, NEW_QUESTION_ID, GET_QUESTIONS_REQUEST, ADD_NEW_ANSWER, ADD_NEW_QUESTION } from './Types';\nimport { loadingBarReducer } from 'react-redux-loading-bar';\nconst initialState = {\n  loggedInUser: \"\",\n  users: [],\n  questions: [],\n  questionstodisplay: \"unanswered\",\n  onhome: false,\n  unanswered_questions: \"\",\n  answered_questions: \"\",\n  newquestionID: \"\",\n  loading: false,\n  loadingBar: loadingBarReducer,\n  auth: false\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOGGEDIN_USER:\n      return { ...state,\n        loggedInUser: action.payload,\n        auth: true\n      };\n\n    case LOGOUT:\n      return { ...state,\n        loggedInUser: \"\",\n        onhome: false,\n        addtoanswer: false,\n        auth: false\n      };\n\n    case SET_ALL_USERS:\n      return { ...state,\n        users: action.payload\n      };\n\n    case GET_ALL_QUESTIONS:\n      return { ...state,\n        questions: action.payload,\n        loading: false\n      };\n\n    case GET_QUESTIONS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case QUESTIONS_TO_DISPLAY:\n      return { ...state,\n        questionstodisplay: action.payload\n      };\n\n    case ON_HOME:\n      return { ...state,\n        onhome: true\n      };\n\n    case GET_ANSWERED:\n      return { ...state,\n        answered_questions: action.payload\n      };\n\n    case GET_UNANSWERED:\n      return { ...state,\n        unanswered_questions: action.payload\n      };\n\n    case NEW_QUESTION_ID:\n      return { ...state,\n        newquestionID: action.payload\n      };\n\n    case ADD_NEW_ANSWER:\n      return { ...state,\n        users: { ...state.users,\n          [action.loggedInUser]: { ...state.users[action.loggedInUser],\n            answers: { ...state.users[action.loggedInUser].answers,\n              [action.id]: action.answer\n            }\n          }\n        },\n        questions: { ...state.questions,\n          [action.id]: { ...state.questions[action.id],\n            [action.answer]: { ...state.questions[action.id][action.answer],\n              votes: state.questions[action.id][action.answer].votes.concat([action.loggedInUser])\n            }\n          }\n        }\n      };\n\n    case ADD_NEW_QUESTION:\n      return { ...state,\n        questions: { ...state.questions,\n          [action.question.id]: action.question\n        },\n        users: { ...state.users,\n          [action.loggedInUser]: { ...state.users[action.loggedInUser],\n            questions: state.users[action.loggedInUser].questions.concat([action.question.id])\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/eric/Desktop/reactnd-project-would-you-rather-starter/src/Redux/Reducer.js"],"names":["SET_LOGGEDIN_USER","LOGOUT","SET_ALL_USERS","GET_ALL_QUESTIONS","QUESTIONS_TO_DISPLAY","ON_HOME","GET_ANSWERED","GET_UNANSWERED","NEW_QUESTION_ID","GET_QUESTIONS_REQUEST","ADD_NEW_ANSWER","ADD_NEW_QUESTION","loadingBarReducer","initialState","loggedInUser","users","questions","questionstodisplay","onhome","unanswered_questions","answered_questions","newquestionID","loading","loadingBar","auth","reducer","state","action","type","payload","addtoanswer","answers","id","answer","votes","concat","question"],"mappings":"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","sourcesContent":["import {\n    SET_LOGGEDIN_USER,\n    LOGOUT, SET_ALL_USERS,\n    GET_ALL_QUESTIONS,\n    QUESTIONS_TO_DISPLAY, \n    ON_HOME, GET_ANSWERED, \n    GET_UNANSWERED, \n    NEW_QUESTION_ID, \n    GET_QUESTIONS_REQUEST, \n    ADD_NEW_ANSWER,\n    ADD_NEW_QUESTION\n} from './Types'\n\nimport { loadingBarReducer } from 'react-redux-loading-bar'\n\nconst initialState = {\n    loggedInUser: \"\",\n    users: [],\n    questions: [],\n    questionstodisplay: \"unanswered\",\n    onhome: false,\n    unanswered_questions: \"\",\n    answered_questions: \"\",\n    newquestionID: \"\",\n    loading:false,\n    loadingBar: loadingBarReducer,\n    auth: false\n}\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_LOGGEDIN_USER:\n            return {\n                ...state,\n                loggedInUser: action.payload,\n                auth: true\n            }\n        case LOGOUT:\n            return {\n                ...state,\n                loggedInUser: \"\",\n                onhome: false,\n                addtoanswer: false,\n                auth:false\n            }\n        case SET_ALL_USERS:\n            return {\n                ...state,\n                users: action.payload\n            }\n        case GET_ALL_QUESTIONS:\n            return {\n                ...state,\n                questions: action.payload,\n                loading: false\n            }\n        case GET_QUESTIONS_REQUEST:\n            return{\n                ...state,\n                loading: true\n            }\n        case QUESTIONS_TO_DISPLAY:\n            return {\n                ...state,\n                questionstodisplay: action.payload\n            }\n        case ON_HOME:\n            return {\n                ...state,\n                onhome: true,\n\n            }\n        case GET_ANSWERED:\n            return {\n                ...state,\n                answered_questions: action.payload\n            }\n        case GET_UNANSWERED:\n            return {\n                ...state,\n                unanswered_questions: action.payload\n            }\n        case NEW_QUESTION_ID:\n            return {\n                ...state,\n                newquestionID: action.payload\n            }\n        case ADD_NEW_ANSWER:\n            return{\n                ...state,\n                users:{\n                    ...state.users,\n                    [action.loggedInUser]:{\n                        ...state.users[action.loggedInUser],\n                        answers:{\n                            ...state.users[action.loggedInUser].answers,\n                            [action.id]: action.answer\n                        }\n                    }\n                },\n                questions:{\n                    ...state.questions,\n                    [action.id]:{\n                        ...state.questions[action.id],\n                        [action.answer]:{\n                            ...state.questions[action.id][action.answer],\n                            votes:state.questions[action.id][action.answer].votes.concat([action.loggedInUser])\n                        }\n                    }\n                }\n\n            }\n        case ADD_NEW_QUESTION:\n            return{\n                ...state,\n                questions: {\n                    ...state.questions,\n                    [action.question.id]: action.question\n                },\n\n                users:{\n                    ...state.users,\n                    [action.loggedInUser]:{\n                        ...state.users[action.loggedInUser],\n                        questions: state.users[action.loggedInUser].questions.concat([action.question.id])\n                    }\n                }\n            }\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}