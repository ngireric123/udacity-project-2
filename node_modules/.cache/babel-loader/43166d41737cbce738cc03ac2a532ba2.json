{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/udacity-project2/udacity_nanodegree_2/src/questions/[id].js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom'; // import { Redirect, useHistory } from 'react-router-dom/cjs/react-router-dom.min'\n\nimport Nav from '../Nav';\nimport NotFound from '../NotFound';\nimport Questionpage from '../Questionpage';\nimport { getquestions, handlesubmitanswer, onhome } from '../Redux/Action'; // import templ from './logo512.png'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnsweredQuestions = ({\n  loggedInUser,\n  questions,\n  users,\n  handlesubmitanswer,\n  onhome,\n  onhomeA\n}) => {\n  _s();\n\n  useEffect(() => {\n    !onhome && onhomeA();\n  });\n  const {\n    id\n  } = useParams();\n  console.log(id);\n\n  if (!Object.keys(questions).includes(id)) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Questionpage, {\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n}; //     console.log(questions[id])\n//     const [selectedOption, setSelectedOption] = useState(\"\")\n//     const [selectedOption1, setSelectedOption1] = useState(\"\")\n//     const [optionOnevote, setOptionOnevote] = useState(questions[id].optionOne.votes.length)\n//     const [optionTwovote, setOptionTwovote] = useState(questions[id].optionTwo.votes.length)\n//     const [totalVotes, setTotalVotes] = useState(questions[id].optionOne.votes.length + questions[id].optionTwo.votes.length)\n//     const onclickOne = () => {\n//         setOptionOnevote((prevState) => prevState + 1)\n//         setTotalVotes((prevState) => prevState + 1)\n//     }\n//     const onclickTwo = () => {\n//         setOptionTwovote((prevState) => prevState + 1)\n//         setTotalVotes((prevState) => prevState + 1)\n//     }\n//     let cardclassname1 = \"card\"\n//     let cardclassname2 = \"card\"\n//     let anscardclassname1 = \"card\"\n//     let anscardclassname2 = \"card\"\n//     if (questions[id].optionOne.votes.includes(loggedInUser)) {\n//         anscardclassname1 = \"selectedcard\"\n//     }\n//     else if (questions[id].optionTwo.votes.includes(loggedInUser)) {\n//         anscardclassname2 = \"selectedcard\"\n//     }\n//     let percent1 = Math.round(optionOnevote / totalVotes * 100)\n//     let percent2 = Math.round(optionTwovote / totalVotes * 100)\n//     const containerStyles = {\n//         height: 30,\n//         width: '80%',\n//         backgroundColor: \"grey\",\n//         borderRadius: 5,\n//         marginTop: 20,\n//         margin: 'auto'\n//     }\n//     const fillerStyles1 = {\n//         height: '100%',\n//         width: `${percent1}%`,\n//         backgroundColor: \"green\",\n//         borderRadius: 'inherit',\n//         textAlign: 'right'\n//     }\n//     const fillerStyles2 = {\n//         height: '100%',\n//         width: `${percent2}%`,\n//         backgroundColor: \"green\",\n//         borderRadius: 'inherit',\n//         textAlign: 'right'\n//     }\n//     const labelStyles = {\n//         padding: 5,\n//         color: 'white',\n//         fontWeight: 'bold'\n//     }\n//     let a = \"\"\n//     const onvalueChange = (e) => {\n//         a = e.target.value\n//         setSelectedOption1(a)\n//     }\n//     const setOption = () => {\n//         setTimeout(() => {\n//             if (selectedOption1 === questions[id].optionOne.text) {\n//                 onclickOne()\n//                 setSelectedOption('optionOne')\n//             } else if (selectedOption1 === questions[id].optionTwo.text) {\n//                 onclickTwo()\n//                 setSelectedOption('optionTwo')\n//             }\n//         }, 1000)\n//     }\n//     let answer\n//     const submitans = () => {\n//         if (selectedOption1 === questions[id].optionOne.text) {\n//             answer = 'optionOne'\n//         }\n//         else if (selectedOption1 === questions[id].optionTwo.text) {\n//             answer = 'optionTwo'\n//         }\n//         handlesubmitanswer(id, answer)\n//     }\n//     return (\n//         <>\n//             <Nav />\n//             {Object.keys(questions).includes(id) ?\n//                 <div>\n//                     {\n//                         questions[id].optionOne.votes.includes(loggedInUser) || questions[id].optionTwo.votes.includes(loggedInUser)\n//                             ?\n//                             <div>\n//                                 <div className=\"id-cards-select\">\n//                                     <div style=\n//                                         {{\n//                                             textAlign: \"left\",\n//                                             backgroundColor: \"whitesmoke\",\n//                                             borderBottom: \"1px solid rgb(216, 212, 212)\",\n//                                             height: \"40px\",\n//                                             padding: \"10px\",\n//                                             boxSizing: \"border-box\"\n//                                         }}><b>{users[questions[id].author].name} ask:</b></div>\n//                                     <div style={{ display: \"flex\" }}>\n//                                         <div style={{ borderRight: \"1px solid rgb(216, 212, 212)\", marginRight: \"10px\", height: \"390px\", display: \"flex\", alignItems: \"center\" }}>\n//                                             <img alt=\"img\" src={templ} style={{ height: \"100px\", margin: \"10px\" }} />\n//                                         </div>\n//                                         <div>\n//                                             <div style={{ marginBottom: \"30px\" }}><b>Results:</b></div>\n//                                             <div className={anscardclassname1}>\n//                                                 <div style={{ margin: \"10px 10px 30px 10px\" }}>\n//                                                     <h4>\n//                                                         {questions[id].optionOne.text}\n//                                                     </h4>\n//                                                 </div>\n//                                                 <div style={containerStyles}>\n//                                                     <div style={fillerStyles1}>\n//                                                         <span style={labelStyles}>{`${percent1}%`}</span>\n//                                                     </div>\n//                                                 </div>\n//                                                 <div style={{ textAlign: \"center\" }}><b>{optionOnevote} out of {totalVotes} votes</b></div>\n//                                             </div>\n//                                             <div className={anscardclassname2}>\n//                                                 <div style={{ margin: \"10px 10px 30px 10px\" }}>\n//                                                     <h4>\n//                                                         {questions[id].optionTwo.text}\n//                                                     </h4>\n//                                                 </div>\n//                                                 <div style={containerStyles}>\n//                                                     <div style={fillerStyles2}>\n//                                                         <span style={labelStyles}>{`${percent2}%`}</span>\n//                                                     </div>\n//                                                 </div>\n//                                                 <div style={{ textAlign: \"center\" }}><b>{optionTwovote} out of {totalVotes} votes</b></div>\n//                                             </div>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                             :\n//                             !selectedOption ?\n//                                 <div className=\"id-cards\">\n//                                     <div style=\n//                                         {{\n//                                             textAlign: \"left\",\n//                                             backgroundColor: \"whitesmoke\",\n//                                             borderBottom: \"1px solid rgb(216, 212, 212)\",\n//                                             height: \"40px\"\n//                                         }}>{users[questions[id].author].name} ask:</div>\n//                                     <div style={{ display: \"flex\" }}>\n//                                         <div style={{ borderRight: \"1px solid rgb(216, 212, 212)\", marginRight: \"10px\", height: \"160px\" }}>\n//                                             <img alt=\"img\" src={templ} style={{ height: \"100px\", margin: \"10px\" }} />\n//                                         </div>\n//                                         <div>\n//                                             <div style={{ marginBottom: \"30px\" }}><b>Would You Rather...</b></div>\n//                                             <div onChange={(e) => onvalueChange(e)}>\n//                                                 <ul style={{ listStyle: \"none\", paddingLeft: \"10px\" }}>\n//                                                     <li><input type=\"radio\" value={questions[id].optionOne.text} name=\"gender\" style={{ outline: \"none\" }} />{questions[id].optionOne.text}</li>\n//                                                     <li><input type=\"radio\" value={questions[id].optionTwo.text} name=\"gender\" style={{ outline: \"none\" }} />{questions[id].optionTwo.text}</li>\n//                                                 </ul>\n//                                             </div>\n//                                             <button className=\"button-id\"\n//                                                 disabled={!selectedOption1}\n//                                                 type=\"submit\"\n//                                                 onClick={() => { setOption(); submitans() }}\n//                                             >Submit</button>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 :\n//                                 <div>\n//                                     <div className=\"id-cards-select\">\n//                                         <div style=\n//                                             {{\n//                                                 textAlign: \"left\",\n//                                                 backgroundColor: \"whitesmoke\",\n//                                                 borderBottom: \"1px solid rgb(216, 212, 212)\",\n//                                                 height: \"40px\",\n//                                                 padding: \"10px\",\n//                                                 boxSizing: \"border-box\"\n//                                             }}><b>{users[questions[id].author].name} ask:</b></div>\n//                                         <div style={{ display: \"flex\" }}>\n//                                             <div style={{ borderRight: \"1px solid rgb(216, 212, 212)\", marginRight: \"10px\", height: \"390px\", display: \"flex\", alignItems: \"center\" }}>\n//                                                 <img alt=\"img\" src={templ} style={{ height: \"100px\", margin: \"10px\" }} />\n//                                             </div>\n//                                             <div>\n//                                                 <div style={{ marginBottom: \"30px\" }}><b>Results:</b></div>\n//                                                 <div className={cardclassname1}>\n//                                                     <div style={{ margin: \"10px 10px 30px 10px\" }}>\n//                                                         <h4>\n//                                                             {questions[id].optionOne.text}\n//                                                         </h4>\n//                                                     </div>\n//                                                     <div style={containerStyles}>\n//                                                         <div style={fillerStyles1}>\n//                                                             <span style={labelStyles}>{`${percent1}%`}</span>\n//                                                         </div>\n//                                                     </div>\n//                                                     <div style={{ textAlign: \"center\" }}><b>{optionOnevote} out of {totalVotes} votes</b></div>\n//                                                 </div>\n//                                                 <div className={cardclassname2}>\n//                                                     <div style={{ margin: \"10px 10px 30px 10px\" }}>\n//                                                         <h4>\n//                                                             {questions[id].optionTwo.text}\n//                                                         </h4>\n//                                                     </div>\n//                                                     <div style={containerStyles}>\n//                                                         <div style={fillerStyles2}>\n//                                                             <span style={labelStyles}>{`${percent2}%`}</span>\n//                                                         </div>\n//                                                     </div>\n//                                                     <div style={{ textAlign: \"center\" }}><b>{optionTwovote} out of {totalVotes} votes</b></div>\n//                                                 </div>\n//                                             </div>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                     }\n//                 </div > :\n//                 <NotFound />\n//             }\n//         </>\n//     )\n// }\n\n\n_s(AnsweredQuestions, \"TYj7W2WQS1esWxhdi6shAKQh+fw=\", false, function () {\n  return [useParams];\n});\n\n_c = AnsweredQuestions;\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    questions: state.questions,\n    users: state.users,\n    unansweredquestions: state.unanswered_questions,\n    answeredquestions: state.answered_questions,\n    auth: state.auth,\n    onhome: state.onhome\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getquestions: () => {\n      dispatch(getquestions());\n    },\n    handlesubmitanswer: (id, answer) => {\n      dispatch(handlesubmitanswer(id, answer));\n    },\n    onhomeA: () => {\n      dispatch(onhome());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnsweredQuestions);\n\nvar _c;\n\n$RefreshReg$(_c, \"AnsweredQuestions\");","map":{"version":3,"sources":["/home/eric/Desktop/udacity-project2/udacity_nanodegree_2/src/questions/[id].js"],"names":["React","useEffect","connect","useParams","Nav","NotFound","Questionpage","getquestions","handlesubmitanswer","onhome","AnsweredQuestions","loggedInUser","questions","users","onhomeA","id","console","log","Object","keys","includes","mapStateToProps","state","unansweredquestions","unanswered_questions","answeredquestions","answered_questions","auth","mapDispatchToProps","dispatch","answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,EAA2CC,MAA3C,QAAyD,iBAAzD,C,CACA;;;;AAKA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,SAAhB;AAA2BC,EAAAA,KAA3B;AAAkCL,EAAAA,kBAAlC;AAAsDC,EAAAA,MAAtD;AAA8DK,EAAAA;AAA9D,CAAD,KAA6E;AAAA;;AAEnGb,EAAAA,SAAS,CAAC,MAAM;AACZ,KAACQ,MAAD,IAAWK,OAAO,EAAlB;AACH,GAFQ,CAAT;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAASZ,SAAS,EAAxB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AACA,MAAI,CAACG,MAAM,CAACC,IAAP,CAAYP,SAAZ,EAAuBQ,QAAvB,CAAgCL,EAAhC,CAAL,EAA0C;AACtC,wBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAIK;AACD,wBACI;AAAA,8BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAc,QAAA,EAAE,EAAIA;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;AAEJ,CArBD,C,CAsiB;UAMaP,S;;;KANbO,iB;;AAiRN,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHX,IAAAA,YAAY,EAAEW,KAAK,CAACX,YADjB;AAEHC,IAAAA,SAAS,EAAEU,KAAK,CAACV,SAFd;AAGHC,IAAAA,KAAK,EAAES,KAAK,CAACT,KAHV;AAIHU,IAAAA,mBAAmB,EAAED,KAAK,CAACE,oBAJxB;AAKHC,IAAAA,iBAAiB,EAAEH,KAAK,CAACI,kBALtB;AAMHC,IAAAA,IAAI,EAAEL,KAAK,CAACK,IANT;AAOHlB,IAAAA,MAAM,EAAEa,KAAK,CAACb;AAPX,GAAP;AASH,CAVD;;AAYA,MAAMmB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHtB,IAAAA,YAAY,EAAE,MAAM;AAAEsB,MAAAA,QAAQ,CAACtB,YAAY,EAAb,CAAR;AAA0B,KAD7C;AAEHC,IAAAA,kBAAkB,EAAE,CAACO,EAAD,EAAKe,MAAL,KAAgB;AAAED,MAAAA,QAAQ,CAACrB,kBAAkB,CAACO,EAAD,EAAKe,MAAL,CAAnB,CAAR;AAA0C,KAF7E;AAGHhB,IAAAA,OAAO,EAAE,MAAM;AAAEe,MAAAA,QAAQ,CAACpB,MAAM,EAAP,CAAR;AAAoB;AAHlC,GAAP;AAKH,CAND;;AAQA,eAAeP,OAAO,CAACmB,eAAD,EAAkBO,kBAAlB,CAAP,CAA6ClB,iBAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n// import { Redirect, useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport Nav from '../Nav'\nimport NotFound from '../NotFound'\nimport Questionpage from '../Questionpage'\nimport { getquestions, handlesubmitanswer, onhome } from '../Redux/Action'\n// import templ from './logo512.png'\n\n\n\n\nconst AnsweredQuestions = ({ loggedInUser, questions, users, handlesubmitanswer, onhome, onhomeA }) => {\n\n    useEffect(() => {\n        !onhome && onhomeA()\n    })\n\n    const { id } = useParams()\n    console.log(id)\n    if (!Object.keys(questions).includes(id)) {\n        return <NotFound />\n    }\n\n    else {\n        return (\n            <div>\n                <Nav/>\n                <Questionpage id = {id}/>\n            </div>\n        )\n    }\n\n}\n//     console.log(questions[id])\n\n//     const [selectedOption, setSelectedOption] = useState(\"\")\n//     const [selectedOption1, setSelectedOption1] = useState(\"\")\n//     const [optionOnevote, setOptionOnevote] = useState(questions[id].optionOne.votes.length)\n//     const [optionTwovote, setOptionTwovote] = useState(questions[id].optionTwo.votes.length)\n//     const [totalVotes, setTotalVotes] = useState(questions[id].optionOne.votes.length + questions[id].optionTwo.votes.length)\n\n//     const onclickOne = () => {\n//         setOptionOnevote((prevState) => prevState + 1)\n//         setTotalVotes((prevState) => prevState + 1)\n//     }\n\n//     const onclickTwo = () => {\n//         setOptionTwovote((prevState) => prevState + 1)\n//         setTotalVotes((prevState) => prevState + 1)\n//     }\n\n//     let cardclassname1 = \"card\"\n//     let cardclassname2 = \"card\"\n//     let anscardclassname1 = \"card\"\n//     let anscardclassname2 = \"card\"\n\n\n//     if (questions[id].optionOne.votes.includes(loggedInUser)) {\n//         anscardclassname1 = \"selectedcard\"\n//     }\n\n//     else if (questions[id].optionTwo.votes.includes(loggedInUser)) {\n//         anscardclassname2 = \"selectedcard\"\n//     }\n\n//     let percent1 = Math.round(optionOnevote / totalVotes * 100)\n//     let percent2 = Math.round(optionTwovote / totalVotes * 100)\n\n//     const containerStyles = {\n//         height: 30,\n//         width: '80%',\n//         backgroundColor: \"grey\",\n//         borderRadius: 5,\n//         marginTop: 20,\n//         margin: 'auto'\n//     }\n\n//     const fillerStyles1 = {\n//         height: '100%',\n//         width: `${percent1}%`,\n//         backgroundColor: \"green\",\n//         borderRadius: 'inherit',\n//         textAlign: 'right'\n//     }\n\n//     const fillerStyles2 = {\n//         height: '100%',\n//         width: `${percent2}%`,\n//         backgroundColor: \"green\",\n//         borderRadius: 'inherit',\n//         textAlign: 'right'\n//     }\n\n//     const labelStyles = {\n//         padding: 5,\n//         color: 'white',\n//         fontWeight: 'bold'\n//     }\n\n\n//     let a = \"\"\n//     const onvalueChange = (e) => {\n//         a = e.target.value\n//         setSelectedOption1(a)\n//     }\n\n\n//     const setOption = () => {\n//         setTimeout(() => {\n//             if (selectedOption1 === questions[id].optionOne.text) {\n//                 onclickOne()\n//                 setSelectedOption('optionOne')\n\n//             } else if (selectedOption1 === questions[id].optionTwo.text) {\n//                 onclickTwo()\n//                 setSelectedOption('optionTwo')\n\n//             }\n//         }, 1000)\n\n//     }\n\n//     let answer\n//     const submitans = () => {\n\n//         if (selectedOption1 === questions[id].optionOne.text) {\n//             answer = 'optionOne'\n//         }\n//         else if (selectedOption1 === questions[id].optionTwo.text) {\n//             answer = 'optionTwo'\n//         }\n\n//         handlesubmitanswer(id, answer)\n\n//     }\n\n//     return (\n//         <>\n//             <Nav />\n//             {Object.keys(questions).includes(id) ?\n//                 <div>\n//                     {\n//                         questions[id].optionOne.votes.includes(loggedInUser) || questions[id].optionTwo.votes.includes(loggedInUser)\n//                             ?\n\n//                             <div>\n//                                 <div className=\"id-cards-select\">\n//                                     <div style=\n//                                         {{\n//                                             textAlign: \"left\",\n//                                             backgroundColor: \"whitesmoke\",\n//                                             borderBottom: \"1px solid rgb(216, 212, 212)\",\n//                                             height: \"40px\",\n//                                             padding: \"10px\",\n//                                             boxSizing: \"border-box\"\n//                                         }}><b>{users[questions[id].author].name} ask:</b></div>\n//                                     <div style={{ display: \"flex\" }}>\n//                                         <div style={{ borderRight: \"1px solid rgb(216, 212, 212)\", marginRight: \"10px\", height: \"390px\", display: \"flex\", alignItems: \"center\" }}>\n//                                             <img alt=\"img\" src={templ} style={{ height: \"100px\", margin: \"10px\" }} />\n//                                         </div>\n//                                         <div>\n//                                             <div style={{ marginBottom: \"30px\" }}><b>Results:</b></div>\n//                                             <div className={anscardclassname1}>\n//                                                 <div style={{ margin: \"10px 10px 30px 10px\" }}>\n//                                                     <h4>\n//                                                         {questions[id].optionOne.text}\n//                                                     </h4>\n//                                                 </div>\n\n//                                                 <div style={containerStyles}>\n//                                                     <div style={fillerStyles1}>\n//                                                         <span style={labelStyles}>{`${percent1}%`}</span>\n//                                                     </div>\n//                                                 </div>\n//                                                 <div style={{ textAlign: \"center\" }}><b>{optionOnevote} out of {totalVotes} votes</b></div>\n//                                             </div>\n//                                             <div className={anscardclassname2}>\n//                                                 <div style={{ margin: \"10px 10px 30px 10px\" }}>\n//                                                     <h4>\n//                                                         {questions[id].optionTwo.text}\n//                                                     </h4>\n//                                                 </div>\n//                                                 <div style={containerStyles}>\n//                                                     <div style={fillerStyles2}>\n//                                                         <span style={labelStyles}>{`${percent2}%`}</span>\n//                                                     </div>\n//                                                 </div>\n//                                                 <div style={{ textAlign: \"center\" }}><b>{optionTwovote} out of {totalVotes} votes</b></div>\n//                                             </div>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                             </div>\n\n\n//                             :\n//                             !selectedOption ?\n//                                 <div className=\"id-cards\">\n//                                     <div style=\n//                                         {{\n//                                             textAlign: \"left\",\n//                                             backgroundColor: \"whitesmoke\",\n//                                             borderBottom: \"1px solid rgb(216, 212, 212)\",\n//                                             height: \"40px\"\n//                                         }}>{users[questions[id].author].name} ask:</div>\n//                                     <div style={{ display: \"flex\" }}>\n//                                         <div style={{ borderRight: \"1px solid rgb(216, 212, 212)\", marginRight: \"10px\", height: \"160px\" }}>\n//                                             <img alt=\"img\" src={templ} style={{ height: \"100px\", margin: \"10px\" }} />\n//                                         </div>\n//                                         <div>\n//                                             <div style={{ marginBottom: \"30px\" }}><b>Would You Rather...</b></div>\n//                                             <div onChange={(e) => onvalueChange(e)}>\n//                                                 <ul style={{ listStyle: \"none\", paddingLeft: \"10px\" }}>\n//                                                     <li><input type=\"radio\" value={questions[id].optionOne.text} name=\"gender\" style={{ outline: \"none\" }} />{questions[id].optionOne.text}</li>\n//                                                     <li><input type=\"radio\" value={questions[id].optionTwo.text} name=\"gender\" style={{ outline: \"none\" }} />{questions[id].optionTwo.text}</li>\n//                                                 </ul>\n//                                             </div>\n//                                             <button className=\"button-id\"\n//                                                 disabled={!selectedOption1}\n//                                                 type=\"submit\"\n//                                                 onClick={() => { setOption(); submitans() }}\n//                                             >Submit</button>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 :\n//                                 <div>\n//                                     <div className=\"id-cards-select\">\n//                                         <div style=\n//                                             {{\n//                                                 textAlign: \"left\",\n//                                                 backgroundColor: \"whitesmoke\",\n//                                                 borderBottom: \"1px solid rgb(216, 212, 212)\",\n//                                                 height: \"40px\",\n//                                                 padding: \"10px\",\n//                                                 boxSizing: \"border-box\"\n//                                             }}><b>{users[questions[id].author].name} ask:</b></div>\n//                                         <div style={{ display: \"flex\" }}>\n//                                             <div style={{ borderRight: \"1px solid rgb(216, 212, 212)\", marginRight: \"10px\", height: \"390px\", display: \"flex\", alignItems: \"center\" }}>\n//                                                 <img alt=\"img\" src={templ} style={{ height: \"100px\", margin: \"10px\" }} />\n//                                             </div>\n//                                             <div>\n//                                                 <div style={{ marginBottom: \"30px\" }}><b>Results:</b></div>\n//                                                 <div className={cardclassname1}>\n//                                                     <div style={{ margin: \"10px 10px 30px 10px\" }}>\n//                                                         <h4>\n//                                                             {questions[id].optionOne.text}\n//                                                         </h4>\n//                                                     </div>\n\n//                                                     <div style={containerStyles}>\n//                                                         <div style={fillerStyles1}>\n//                                                             <span style={labelStyles}>{`${percent1}%`}</span>\n//                                                         </div>\n//                                                     </div>\n//                                                     <div style={{ textAlign: \"center\" }}><b>{optionOnevote} out of {totalVotes} votes</b></div>\n//                                                 </div>\n//                                                 <div className={cardclassname2}>\n//                                                     <div style={{ margin: \"10px 10px 30px 10px\" }}>\n//                                                         <h4>\n//                                                             {questions[id].optionTwo.text}\n//                                                         </h4>\n//                                                     </div>\n//                                                     <div style={containerStyles}>\n//                                                         <div style={fillerStyles2}>\n//                                                             <span style={labelStyles}>{`${percent2}%`}</span>\n//                                                         </div>\n//                                                     </div>\n//                                                     <div style={{ textAlign: \"center\" }}><b>{optionTwovote} out of {totalVotes} votes</b></div>\n//                                                 </div>\n//                                             </div>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                     }\n//                 </div > :\n//                 <NotFound />\n//             }\n\n//         </>\n//     )\n// }\n\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedInUser: state.loggedInUser,\n        questions: state.questions,\n        users: state.users,\n        unansweredquestions: state.unanswered_questions,\n        answeredquestions: state.answered_questions,\n        auth: state.auth,\n        onhome: state.onhome\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getquestions: () => { dispatch(getquestions()) },\n        handlesubmitanswer: (id, answer) => { dispatch(handlesubmitanswer(id, answer)) },\n        onhomeA: () => { dispatch(onhome()) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnsweredQuestions)\n\n"]},"metadata":{},"sourceType":"module"}