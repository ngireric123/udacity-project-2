{"ast":null,"code":"var _jsxFileName = \"/home/eric/Desktop/udacity-project2/udacity_nanodegree_2/src/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setloggedinuser, onhome } from './Redux/Action';\nimport { Link } from 'react-router-dom';\nimport Nav from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  users,\n  loggedInUser,\n  setloggedinuser,\n  onhome\n}) => {\n  let path = \"/\";\n\n  if (loggedInUser) {\n    path = \"/home\";\n  }\n\n  const handleemptylogin = () => {\n    if (path === \"/\") {\n      alert(\"please select a user\");\n    }\n  };\n\n  const allusers = Object.keys(users);\n  console.log(allusers);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: \"60px\",\n          backgroundColor: \"whitesmoke\",\n          borderBottom: \"1px solid rgb(216, 212, 212)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                margin: \"0\"\n              },\n              children: \"Welcome to the Would You Rather App!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"Please sign in to continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: \"logo512.png\",\n          style: {\n            height: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"rgb(51, 172, 56)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: \"40px\"\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: loggedInUser,\n          style: {\n            width: \"80%\",\n            height: \"40px\",\n            cursor: \"pointer\"\n          },\n          onChange: e => setloggedinuser(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), allusers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user,\n            children: user\n          }, user, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: path,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !loggedInUser,\n          className: \"button\",\n          type: \"submit\",\n          onClick: () => {\n            handleemptylogin();\n            onhome();\n          },\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser,\n    users: state.users,\n    questions: state.questions,\n    answeredquestions: state.answered_questions,\n    unansweredquestions: state.unanswered_questions\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setloggedinuser: user => {\n      dispatch(setloggedinuser(user));\n    },\n    onhome: () => {\n      dispatch(onhome());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/eric/Desktop/udacity-project2/udacity_nanodegree_2/src/Login.js"],"names":["React","connect","setloggedinuser","onhome","Link","Nav","Login","users","loggedInUser","path","handleemptylogin","alert","allusers","Object","keys","console","log","display","alignItems","justifyContent","height","backgroundColor","borderBottom","margin","textAlign","marginTop","color","width","cursor","e","target","value","map","user","mapStateToProps","state","questions","answeredquestions","answered_questions","unansweredquestions","unanswered_questions","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { setloggedinuser, onhome } from './Redux/Action'\nimport { Link } from 'react-router-dom'\nimport Nav from './Nav'\n\n\nconst Login = ({users, loggedInUser, setloggedinuser, onhome }) => {\n\n    let path = \"/\"\n    if (loggedInUser) {\n        path = \"/home\"\n    }\n\n\n    const handleemptylogin = () => {\n        if (path === \"/\") {\n            alert(\"please select a user\")\n        }\n    }\n    const allusers = Object.keys(users)\n    console.log(allusers)\n    return (\n        <>\n        <Nav />\n        <div className=\"login-box\">\n            <div style=\n                {{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    height: \"60px\",\n                    backgroundColor: \"whitesmoke\",\n                    borderBottom: \"1px solid rgb(216, 212, 212)\"\n                }}>\n                <div>\n                    <div><h4 style={{ margin: \"0\" }}>Welcome to the Would You Rather App!</h4></div>\n                    <div style={{ textAlign: \"center\" }}>Please sign in to continue</div>\n                </div>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"50px\" }}>\n                <img alt=\"\" src=\"logo512.png\" style={{ height: \"100px\" }} />\n            </div>\n            <div>\n                <span style={{ color: \"rgb(51, 172, 56)\" }}>\n                    <h3 style={{ marginTop: \"40px\" }}>Sign In</h3>\n                </span>\n                <select value={loggedInUser} style={{ width: \"80%\", height: \"40px\", cursor: \"pointer\" }} onChange={(e) => setloggedinuser(e.target.value)}>\n                    <option value=\"\" disabled >Select user</option>\n                    {\n\n                        allusers.map(user => (\n                            <option value={user} key={user}>{user}</option>\n                        ))\n\n                    }\n                </select>\n\n            </div>\n            <Link to={path}>\n                <button disabled={!loggedInUser} className=\"button\" type=\"submit\" onClick={() =>{handleemptylogin(); onhome()}}>\n                    Sign in\n                </button>\n            </Link>\n        </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedInUser: state.loggedInUser,\n        users: state.users,\n        questions: state.questions,\n        answeredquestions: state.answered_questions,\n        unansweredquestions: state.unanswered_questions\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setloggedinuser: (user) => { dispatch(setloggedinuser(user)) },\n        onhome: () => { dispatch(onhome()) },\n        \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}